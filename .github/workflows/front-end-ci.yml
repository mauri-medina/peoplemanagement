# This is a basic workflow to help you get started with Actions
name: Front End CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    env:
      working-directory: ./front-end
      build-name: pm-ui

    steps:
      - uses: actions/checkout@v1

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: npm install
        run: |
          npm install
        working-directory: ${{env.working-directory}}

      - name: build
        run: |
          npm run build:prod
        working-directory: ${{env.working-directory}}

        # this step is only needed to copy the dist to server and not entire directory tree
      - name: Move build directory to parent directory
        run: mv ${{env.working-directory}}/dist/${{env.build-name}} .

      - name: scp build directory to server
        uses: appleboy/scp-action@master
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.PRIVATE_KEY }}
        with:
          source: "${{env.build-name}}"
          target: "/var/www/html/"
          
      - name: executing remote deploy using ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            sudo systemctl restart apache2
