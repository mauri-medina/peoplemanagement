# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  compile:
    runs-on: ubuntu-latest
    env:
      working-directory: ./back-end
    name: Java compile
    steps:
      - uses: actions/checkout@master
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: maven clean compile
        run: mvn -f pom.xml clean compile
        working-directory: ${{env.working-directory}}
        
  build:
    runs-on: ubuntu-latest
    needs: compile
    name: Build Maven Project
    env:
      working-directory: ./back-end

    steps:
    - uses: actions/checkout@v2
    
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml -Dmaven.test.skip=true
      working-directory: ${{env.working-directory}}
    
  deploy:
    name: deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: copy file via ssh key
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        source: "${{env.working-directory}}/target/*.jar"
        target: "/home/${{ secrets.USERNAME }}/"
 
